# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js 16.x'

      - script: |
          cd BrainSqueezes_UI/
          npm install -g @angular/cli
          npm install
          ng build
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'

    #   - task: CmdLine@2
    #     displayName: "Run unit tests"
    #     inputs:
    #       script: |
    #         cd BrainSqueezes_UI/
    #         ng test --browsers=ChromeHeadless --code-coverage --watch=false

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/_PraveenSuggula_Brain-Squeezes/BrainSqueezes_UI/dist/brain-squeezes-ui'
          includeRootFolder: false
          archiveType: zip
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'brain-squeezes-ui'
          publishLocation: 'Container'

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentDevelopment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureWebApp@1
            displayName: 'Deploy App Service'
            inputs:
              azureSubscription: 'Azure for Students (a19e346d-3328-4307-8efe-e6d0ff53ca52)'
              appType: 'webAppLinux'
              appName: 'BZ1'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|16-lts'
    
